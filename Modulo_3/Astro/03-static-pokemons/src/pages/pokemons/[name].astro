---
import type { GetStaticPaths } from "astro";
import type {pokemonListResponse} from "../../interfaces/pokemon-list.response"
import {Icon} from  'astro-icon/components';
import PokemonsCards from "../../components/pokemons/pokemonsCards.astro";
import MainLayout from '../../layouts/MainLayout.astro';
import Title from "../../components/pokemons/Shared/Title.astro";


export const getStaticPaths = (async() => {

    const resp = await fetch('https://pokeapi.co/api/v2/pokemon/?limit=151');
    const {results} = await resp.json() as pokemonListResponse;
    
    return results.map(({name,  url}) =>({
        params: { name },
        props: { name: name, url: url }
    }));
    
    
    // return [
    //     {params: {name: 'bulbasaur'}, props: {name: 'bulbasaur', url: 'https://pokeapi.co/api/v2/pokemon/1/'}},
    //     {params: {name: 'charmander'}, props: {name: 'charmander', url: 'https://pokeapi.co/api/v2/pokemon/4/'}},
    //     {params: {name: 'raticate'} , props: {name: 'raticate', url: 'https://pokeapi.co/api/v2/pokemon/20/'}},
    
    // ];
}) satisfies GetStaticPaths;

const {name} = Astro.params;
const {url} = Astro.props;
const id = url.split('/').at(-2);
const audioSrc = `https://raw.githubusercontent.com/PokeAPI/cries/main/cries/pokemon/latest/${id}.ogg`;
const imageScr = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${id}.png`

---

<MainLayout title={`pokémon - #${id} ${name}`}
    description={`Informacion sobre el pokémon ${name}`}
    imagen={imageScr}
    >
    <section class="mt-10 mx-10 flex flex-col justify-center items-center"> 
        
        <div class="flex flex-row">
            <div>
                <button 
                onclick="history.back()"
                class="text-blue-500 font-bold ">Regresar</button>
                <Title>{name}</Title>
                
            </div>
    
            <button class="ml-4" id="btn-favorite" data-name={name} data-id={id}>
                <Icon data-outline name="heart-outline" size={50} />
                <Icon data-full class="hidden" name="heart-full" size={50} />
            </button>
    
        </div>

        <PokemonsCards name = {name} url= {url} isBig = {true} />
        
        <audio controls class="mt-5">
            <source src={audioSrc} type="audio/ogg"/>
            Your browser does not support the audio element.
        </audio>
        
    </section>
</MainLayout>


<script>
    

    import type { FavoritePokemons } from "../../interfaces/favorite-pokemons";



    const handlePageLoad = () => {
        let favoritePokemons: FavoritePokemons[] = JSON.parse(
            localStorage.getItem('favorites') ?? '[]'
        );
        console.log('favotirePokemon');
        
        const btnFavorite = document.querySelector('#btn-favorite') as HTMLButtonElement;

        if (!btnFavorite) return;

        const name = btnFavorite.dataset.name ?? '';
        const id = btnFavorite.dataset.id ?? '';
        // console.log(name, id);
        const isFavorite = favoritePokemons.some((fav) => fav.name === name);
        

        const heartOutline = btnFavorite.querySelector('[data-outline]') as HTMLElement;
        const heartFull = btnFavorite.querySelector('[data-full]') as HTMLElement;

        if(isFavorite){
            heartOutline.classList.add('hidden');
            heartFull.classList.remove('hidden');

        }

        const toggleFavorite = () => {
            const isFavorite = favoritePokemons.some((fav) => fav.name === name);
            if (isFavorite) {
                // Remover
                favoritePokemons = favoritePokemons.filter((fav) => fav.name !== name)
            }else{
                // Agregar
                favoritePokemons.push({
                    id: +id,
                    name: name
                });
            }

            localStorage.setItem('favorites',JSON .stringify(favoritePokemons));
        };

        btnFavorite.addEventListener('click', ()=>{
            // console.log({name, id});
            heartOutline.classList.toggle('hidden');
            heartFull.classList.toggle('hidden');

            toggleFavorite();
        });
    };


    document.addEventListener('astro:page-load', handlePageLoad);

  
</script>

<style>
a{
    @apply hover:underline text-blue-500
}

#btn-favorite {
    @apply hover:animate-pulse;
}
</style>